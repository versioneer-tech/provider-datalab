{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Provider Datalab","text":"<p>Welcome to the Provider Datalab documentation. This Crossplane provider delivers a unified way to provision cloud workspaces for your data exploration and data processing tasks on Kubernetes.  </p> <p>It provides a Datalab Composite Resource Definition (XRD) and ready-to-use Compositions to connect to storage and provision vclusters, identity integration, and supporting services for collaborative analysis.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Workspace abstraction   Define and provision full-featured data labs based on Educates or Jupyter as a single resource.  </li> <li>Multi-tenant support   Each Datalab can run isolated inside a Kubernetes namespace or in a dedicated virtual cluster (vcluster).  </li> <li>Integrated identity   Seamless authentication and authorization via Keycloak.  </li> <li>Declarative storage   Provision and attach buckets with access policies.  </li> <li>Extensible by design   Built on Crossplane v2, ready to extend with new resources.  </li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>To install the configuration package into your Crossplane environment, e.g. based on Educates, use:</p> <pre><code>apiVersion: pkg.crossplane.io/v1\nkind: Configuration\nmetadata:\n  name: datalab-educates\nspec:\n  package: ghcr.io/versioneer-tech/provider-datalab/eductaes0.1.0-beta.4\n  skipDependencyResolution: true\n</code></pre>"},{"location":"#quickstart","title":"Quickstart","text":""},{"location":"#minimal-example","title":"Minimal Example","text":"<pre><code>apiVersion: pkg.internal/v1beta1\nkind: Datalab\nmetadata:\n  name: team-wonderland\nspec:\n  users:\n  - alice\n  sessions:\n  - default\n  vcluster: true\n</code></pre> <p>This provisions a vcluster within a dedicated Kubernetes namespace and starts the Educates tooling stack (including VS Code Server and a terminal), together with bundled utilities. A storage browser is available with storage automatically mounted, and additional tools such as <code>awscli</code> and <code>rclone</code> are preinstalled to support typical data lab tasks like coding, data exploration, and wrangling.  </p> <p>Access to the datalab is restricted to Alice, since she currently is the only user associated with this lab.  </p> <p>Combined with a small, cluster-specific <code>EnvironmentConfig</code> (realm, ingress domain/class, storage secret), the platform handles the rest\u2014provisioning the chosen runtime, mounting credentials, and preloading content.  </p> <p>Note</p> <p>All configuration packages built from <code>provider-datalab</code> (educates, jupyter,...) share the same Composite Resource Definition!</p>"},{"location":"#more-examples","title":"More Examples","text":"<p>Check the examples folder in the GitHub repository for complete scenarios, including: - Datalabs with multiple users - Datalabs with integrated storage - Identity-aware environments</p>"},{"location":"how-to-guides/installation/","title":"Provider Datalab \u2013 Installation Guide","text":"<p>The <code>provider-datalab</code> configuration packages let you provision collaborative data labs on Kubernetes, using either Educates or Jupyter runtimes. Labs, sessions, storage, and identity are declared via a single, namespaced <code>Datalab</code> spec.</p>"},{"location":"how-to-guides/installation/#namespacing-model-important","title":"Namespacing Model (Important)","text":"<p>Everything in this guide is namespaced:</p> <ul> <li>You apply <code>Datalab</code> claims to a namespace (e.g., <code>workspace</code>).  </li> <li>The referenced Secret for storage lives in the same namespace as the <code>Datalab</code> claim (Secret name = <code>spec.secretName</code>).  </li> <li>Any namespaced ProviderConfigs or supporting objects that the compositions depend on must exist in that same target namespace (e.g., <code>workspace</code>).  </li> </ul> <p>In short: choose your target namespace (e.g., <code>workspace</code>), apply the provider configs there, and create your <code>Datalab</code> claims in that namespace.</p>"},{"location":"how-to-guides/installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>A running Kubernetes cluster (e.g., <code>kind</code>, managed K8s).  </li> <li><code>kubectl</code> access.  </li> <li>Crossplane installed in the cluster:  </li> </ul> <pre><code>helm repo add crossplane-stable https://charts.crossplane.io/stable\nhelm repo update\nhelm install crossplane \\\n  --namespace crossplane-system \\\n  --create-namespace crossplane-stable/crossplane \\\n  --version 2.0.2 \\\n  --set provider.defaultActivations={}\n</code></pre> <ul> <li>Educates installed with all CRDs in the cluster if you plan to use the Educates runtime.   See the Educates Installation Guide for details.  </li> <li>JupyterHub / Jupyter Operator installed if you plan to use the Jupyter runtime (upcoming integration).  </li> </ul> <p>Without the corresponding runtime installed, Datalab claims for that variant will not reconcile.</p> <p>To reduce control-plane load, we use a <code>ManagedResourceActivationPolicy</code> (MRAP) per backend so only the needed Managed Resources are active.</p>"},{"location":"how-to-guides/installation/#step-1-install-provider-dependencies-per-runtime","title":"Step 1 \u2013 Install Provider Dependencies (per runtime)","text":"<p>All runtimes follow the same staged pattern you must install before the configuration package: 1. ManagedResourceActivationPolicy \u2013 activate only the resource kinds that are needed. 2. Deployment Runtime Configs \u2013 define how providers/functions run. 3. Providers \u2013 install the required Crossplane providers. 4. ProviderConfigs (namespaced) \u2013 configure providers in your target namespace. 5. Functions \u2013 install supporting Crossplane Functions. 6. RBAC \u2013 permissions for <code>provider-kubernetes</code> to observe and reconcile objects.</p> <p>Repository root: https://github.com/versioneer-tech/provider-datalab/</p>"},{"location":"how-to-guides/installation/#educates-runtime","title":"Educates Runtime","text":"<p>You operate the Educates training platform in your cluster. Ensure Educates is installed with all CRDs before proceeding.  </p> <p>Provider dependencies activate Helm, Kubernetes, and Keycloak resources as needed:</p> <ul> <li>00-mrap.yaml \u2013 Activate Educates-specific Managed Resources.  </li> <li>01-deploymentRuntimeConfigs.yaml \u2013 Runtime configs for providers/functions.  </li> <li>02-providers.yaml \u2013 Install Helm, Kubernetes, and Keycloak providers.  </li> <li>03-providerConfigs.yaml \u2013 Apply in your target namespace (e.g., <code>workspace</code>); sets up storage and identity configs.  </li> <li>functions.yaml \u2013 Functions used by compositions.  </li> <li>rbac.yaml \u2013 RBAC for <code>provider-kubernetes</code>.</li> </ul> <p>When installed, a Datalab will provision a vcluster (if enabled) and launch the Educates tooling stack (VS Code Server, terminal, storage browser, plus preinstalled tools like <code>awscli</code> and <code>rclone</code>).</p>"},{"location":"how-to-guides/installation/#jupyter-runtime-upcoming","title":"Jupyter Runtime (upcoming)","text":"<p>Upcoming integration!</p>"},{"location":"how-to-guides/installation/#step-2-install-the-configuration-package-after-dependencies","title":"Step 2 \u2013 Install the Configuration Package (after dependencies)","text":"<p>Once the provider dependencies are in place, install the configuration package for your chosen runtime. This registers the <code>Datalab</code> CRD and compositions and allows immediate reconciliation because the providers/configs already exist.</p> <p>Example \u2013 Educates</p> <pre><code>apiVersion: pkg.crossplane.io/v1\nkind: Configuration\nmetadata:\n  name: datalab-educates\nspec:\n  package: ghcr.io/versioneer-tech/provider-datalab/educates:0.1.0-beta.4\n  skipDependencyResolution: true\n</code></pre> <p>Apply:</p> <pre><code>kubectl apply -f configuration.yaml\n</code></pre>"},{"location":"how-to-guides/installation/#step-3-environment-configuration","title":"Step 3 \u2013 Environment configuration","text":"<p>Provide cluster-specific settings through an <code>EnvironmentConfig</code>. The composition consumes this to render ingress, identity, and storage correctly:</p> <pre><code>apiVersion: apiextensions.crossplane.io/v1beta1\nkind: EnvironmentConfig\nmetadata:\n  name: datalab\ndata:\n  iam:\n    realm: demo\n  ingress:\n    class: nginx\n    domain: datalab.demo\n    secret: wildcard-tls\n  storage:\n    endpoint: https://s3.demo\n    provider: Other\n    region: demo\n    force_path_style: \"true\"\n    secretNamespace: datalab\n    type: s3\n  network:\n    serviceCIDR: \"10.43.0.0/16\"\n</code></pre>"},{"location":"how-to-guides/installation/#step-4-storage-credentials","title":"Step 4 \u2013 Storage credentials","text":"<p>The <code>storage</code> section in the <code>EnvironmentConfig</code> references a Kubernetes Secret \u2014 named identically to <code>spec.secretName</code> in the Datalab \u2014 which must already exist in the cluster. This Secret must reside in the namespace specified by <code>storage.secretNamespace</code> and include at least:</p> <ul> <li><code>AWS_ACCESS_KEY_ID</code> </li> <li><code>AWS_SECRET_ACCESS_KEY</code> </li> </ul> <p>Create it manually, for example:</p> <pre><code>kubectl -n datalab create secret generic demo \\\n  --from-literal=AWS_ACCESS_KEY_ID=&lt;KEY_ID&gt; \\\n  --from-literal=AWS_SECRET_ACCESS_KEY=&lt;SECRET&gt;\n</code></pre>"},{"location":"how-to-guides/installation/#step-5-create-a-datalab","title":"Step 5 \u2013 Create a Datalab","text":"<p>The minimal example creates a user-scoped lab with one session. - Sessions present \u2192 a runtime is automatically started until stopped by the operator. - No sessions \u2192 no runtime is started until the user explicitly launches one. - Files present \u2192 workshop tab enabled; none \u2192 no workshop tab. - <code>spec.vcluster: true</code> \u2192 vcluster provisioned; <code>false</code> \u2192 namespace-scoped runtime.</p> <pre><code>apiVersion: pkg.internal/v1beta1\nkind: Datalab\nmetadata:\n  name: demo\n  namespace: datalab\nspec:\n  users:\n  - alice\n  sessions:\n  - default\n  vcluster: true\n  files: []\n</code></pre> <p>For more scenarios, see these <code>example manifests</code>, which demonstrate: - labs with multiple users - enabling/disabling <code>spec.vcluster</code> - attaching workshop files from Git, OCI images, or HTTP sources  </p>"},{"location":"how-to-guides/installation/#step-6-validate-installation","title":"Step 6 \u2013 Validate installation","text":"<p>Check that packages, providers, CRDs, and your XRD are healthy:</p> <pre><code>kubectl get providers.pkg.crossplane.io\nkubectl get providerrevisions.pkg.crossplane.io\n\nkubectl get configurations.pkg.crossplane.io\nkubectl get configurationrevisions.pkg.crossplane.io\n\nkubectl api-resources --api-group=kubernetes.crossplane.io\nkubectl api-resources --api-group=helm.crossplane.io\nkubectl api-resources --api-group=keycloak.crossplane.io\n\nkubectl get managedresourcedefinitions | grep -E 'helm|kubernetes|keycloak'\n\nkubectl get xrd\nkubectl get datalabs.pkg.internal -A\n</code></pre>"},{"location":"how-to-guides/security/","title":"Provider Datalab \u2013 Security in Cloud Workspaces","text":"<p>Running Datalabs means letting end users run their own code on your servers. In practice, this is like operating a shared computer lab: some users are trusted colleagues, others are students, and some may be external partners. Everyone is authenticated, but authentication is not the same as trust. An authenticated user can still make mistakes, run unsafe workloads, or attempt to break out of their sandbox. The security model of Datalabs must therefore acknowledge different trust levels: users can be trusted to log in, but not necessarily trusted with unrestricted access.</p> <p>Out of the box, our platform applies a baseline security model: workloads are isolated into namespaces, Pods are subject to Kubernetes admission controls, and NetworkPolicies block access to sensitive metadata endpoints. This baseline is pragmatic but effective. Beyond it, security can be extended with Kyverno policies and other admission controllers to enforce stricter boundaries.</p>"},{"location":"how-to-guides/security/#network-isolation-with-networkpolicies","title":"Network Isolation with NetworkPolicies","text":"<p>Kubernetes NetworkPolicies control how pods communicate with each other and with external services. By default, a cluster allows all pod-to-pod and internet traffic. NetworkPolicies reverse this: once isolation is enabled, only explicitly allowed traffic flows.</p> <p>Policies are flexible: they can be as strict as \u201cthis pod only talks to another on one port,\u201d or as permissive as \u201call pods in this namespace can reach the internet.\u201d What we apply here is not a perfect \u201czero trust\u201d design but a pragmatic baseline balancing usability and protection.</p> <p>When a Datalab is created, NetworkPolicies are provisioned automatically in the corresponding namespace:</p> <ul> <li>Egress rules apply to pods in the namespace (the traffic source).  </li> <li>Ingress rules apply to pods in the namespace (the traffic destination).  </li> </ul>"},{"location":"how-to-guides/security/#allow-web-egress","title":"allow-web-egress","text":"<p>Currently, we deploy a single permissive policy:</p> <ul> <li>Pods: all pods in environment namespaces (where user workloads run)  </li> <li>Allows: all egress traffic to the internet  </li> <li>Blocks: access to the cloud instance metadata endpoint <code>169.254.169.254/32</code> </li> </ul> <p>This endpoint (known as IMDS) provides cloud instance credentials that bypass Kubernetes RBAC if exposed inside a pod. Protecting it is critical in multi-tenant setups.  </p> <p>Note: In our IPv4-only cluster, only <code>169.254.169.254</code> must be blocked. In dual-stack or IPv6-only clusters, the corresponding IPv6 endpoint (commonly <code>fd00:ec2::254</code>) must also be restricted.</p> <p>This \u201callow everything except IMDS\u201d approach ensures users can fetch packages, clone repositories, or access S3 buckets, while removing the most dangerous privilege escalation path.</p>"},{"location":"how-to-guides/security/#vcluster-vs-namespace-security","title":"vcluster vs Namespace Security","text":"<p>vcluster improves the developer experience by giving each tenant a virtual control plane, but it does not create stronger isolation:</p> <ul> <li>All workloads still run in the host namespace.  </li> <li>PodSecurity and NetworkPolicies apply at the host namespace level.  </li> <li>vcluster mirrors host cluster policies: it does not itself prevent privileged workloads (<code>hostPath</code>, <code>hostNetwork</code>, <code>privileged: true</code>) unless these are already disallowed at cluster level.  </li> </ul> <p>Takeaway: treat vcluster namespaces the same as direct tenant namespaces. Enable Pod Security Admission (<code>baseline</code> or <code>restricted</code>) and rely on NetworkPolicies for communication boundaries.</p>"},{"location":"how-to-guides/security/#policy-enforcement","title":"Policy Enforcement","text":"<p>The enforcement of NetworkPolicies depends on the CNI plugin (Cilium, Calico, Antrea, etc.). Without a CNI that supports them, policies have no effect.</p> <p>We assume:</p> <ul> <li>CNI enforces policies consistently across all nodes.  </li> <li>IMDS endpoints are blocked via the allow-web-egress policy.  </li> <li>External access flows through a central ingress controller for TLS, auditing, and routing.  </li> </ul> <p>More restrictive egress controls (e.g., whitelisting PyPI, GitHub, or S3) could be added, but these create significant operational overhead and reduce usability. Our design is intentionally permissive, with the option to tighten later.</p> <p>Kyverno can be added to enforce stricter pod-level policies across environments. For example, you can block privileged pods, disallow host networking, or restrict image registries. or deploying workloads that would otherwise compromise the host cluster.\u201d</p>"},{"location":"how-to-guides/security/#summary","title":"Summary","text":"<p>In our current configuration, the baseline security model is:</p> <ul> <li>Apply one permissive egress policy per environment namespace: allow everything, except block the cloud metadata endpoint.  </li> <li>Use PodSecurity Admission to prevent privilege escalation.  </li> <li>Keep policies in the environment namespace, where workloads actually run.  </li> <li>Route ingress through a central controller for TLS and auditing.  </li> </ul> <p>This setup prioritizes usability for researchers while protecting the cluster\u2019s most critical boundary: preventing pods from stealing cloud instance credentials.  </p> <p>Over time, this model can evolve into stricter egress filtering or finer-grained ingress/egress rules, but it already provides a safe and pragmatic baseline for multi-tenant Datalabs.</p>"},{"location":"how-to-guides/usage_concepts/","title":"Provider Datalab \u2013 Usage &amp; Concepts","text":"<p>This section explains how to use the <code>provider-datalab</code> configuration packages once they are installed. It focuses on the concepts of Sessions, Files, vclusters, Storage Secrets, and the required Keycloak integration for identity and access.</p>"},{"location":"how-to-guides/usage_concepts/#concepts","title":"Concepts","text":""},{"location":"how-to-guides/usage_concepts/#sessions","title":"Sessions","text":"<p>A <code>Datalab</code> claim may declare one or more <code>spec.sessions</code>.  </p> <ul> <li>If at least one session is listed, a corresponding WorkshopSession is automatically created and will run permanently until stopped by the operator.  </li> <li>If no sessions are given, no runtime will be started; users must explicitly launch a session themselves (<code>auto</code> mode).  </li> </ul> <p>Sessions can also be patched into the spec later if needed.</p>"},{"location":"how-to-guides/usage_concepts/#files-and-the-workshop-tab","title":"Files and the Workshop Tab","text":"<p>The <code>spec.files</code> array is optional.  </p> <ul> <li>When empty or omitted, no workshop tab is rendered in the Educates UI.  </li> <li>When at least one source is defined, workshop and/or data content is mounted and the tab is enabled.</li> </ul> <p>Supported sources:</p> <ul> <li>OCI image (<code>spec.files[].image</code>)  </li> <li>Git repository (<code>spec.files[].git</code>)  </li> <li>HTTP(S) download (<code>spec.files[].http</code>)  </li> </ul> <p>Filters (<code>includePaths</code>, <code>excludePaths</code>, <code>newRootPath</code>, <code>path</code>) control what ends up visible.</p>"},{"location":"how-to-guides/usage_concepts/#vcluster-toggle","title":"vcluster toggle","text":"<p><code>spec.vcluster</code> is a boolean flag. - <code>true</code> \u2192 the datalab provisions a vcluster for runtime isolation. - <code>false</code> \u2192 workloads run directly in the namespace.</p>"},{"location":"how-to-guides/usage_concepts/#storage-secret","title":"Storage Secret","text":"<p>A Datalab requires credentials to an S3-compatible storage system. Credentials are expected to exist in a Kubernetes Secret named via <code>spec.secretName</code>, in the same namespace as the Datalab.  </p> <p>This secret must include at least the <code>access_key</code> and <code>access_secret</code>. The endpoint and provider are defined in <code>EnvironmentConfig.data.storage</code>.</p>"},{"location":"how-to-guides/usage_concepts/#identity-and-keycloak-resources","title":"Identity and Keycloak Resources","text":"<p>Users listed under <code>spec.users</code> must already exist in Keycloak. When a Datalab is created, the composition also provisions the required Keycloak resources:</p> <ul> <li>A Group for the datalab  </li> <li>Group memberships for the listed users  </li> <li>A Client and Role to protect access to the datalab and installed tooling  </li> </ul> <p>This ensures that authentication and authorization are consistently enforced across the runtime and UI.</p>"},{"location":"how-to-guides/usage_concepts/#example-joe-no-session-by-default","title":"Example: Joe (no session by default)","text":"<pre><code># Joe gets a personal datalab s-joe with no pre-created session.\n# He must explicitly start a session himself; nothing is running by default.\n# No vcluster is provisioned and no workshop files are attached.\n# Credentials to storage are expected to exist in a secret \"joe\" in the same namespace.\n# A Keycloak group, role, and client are created; user \"joe\" must exist in Keycloak.\napiVersion: pkg.internal/v1beta1\nkind: Datalab\nmetadata:\n  name: s-joe\nspec:\n  users:\n  - joe\n  secretName: joe\n</code></pre> <ul> <li>Joe\u2019s Datalab exists but is idle until he launches a session.  </li> <li>Useful for lightweight, on-demand environments.  </li> <li>Keycloak ensures Joe is authorized to access his workspace.  </li> </ul>"},{"location":"how-to-guides/usage_concepts/#example-jeff-and-jim-shared-session","title":"Example: Jeff and Jim (shared session)","text":"<pre><code># Jeff and Jim share a datalab s-jeff with one default shared session\n# automatically created. That session will run permanently until stopped by the operator.\n# The lab does not use a vcluster and has no workshop files.\n# Credentials to storage are expected to exist in a secret \"jeff\" in the same namespace.\n# A Keycloak group, role, and client are created; users \"jeff\" and \"jim\" must exist in Keycloak.\napiVersion: pkg.internal/v1beta1\nkind: Datalab\nmetadata:\n  name: s-jeff\nspec:\n  users:\n  - jeff\n  - jim\n  secretName: jeff\n  sessions:\n  - default\n  vcluster: false\n  files: []\n</code></pre> <ul> <li>A long-running session is started immediately, shared by both users.  </li> <li>This is the \u201calways-on\u201d style of datalab.  </li> <li>Access is secured through the corresponding Keycloak group and role.  </li> </ul>"},{"location":"how-to-guides/usage_concepts/#example-jane-with-vcluster","title":"Example: Jane (with vcluster)","text":"<pre><code># Jane runs a datalab s-jane with a default session automatically created.\n# That session will run permanently until stopped by the operator,\n# and a dedicated vcluster is provisioned for runtime isolation.\n# No workshop files are attached. Credentials to storage are expected\n# to exist in a secret \"jane\" in the same namespace.\n# A Keycloak group, role, and client are created; user \"jane\" must exist in Keycloak.\napiVersion: pkg.internal/v1beta1\nkind: Datalab\nmetadata:\n  name: s-jane\nspec:\n  users:\n  - jane\n  secretName: jane\n  sessions: \n  - default\n  vcluster: true\n</code></pre> <ul> <li>Jane\u2019s workloads run inside an isolated virtual cluster.  </li> <li>Ideal for complex labs requiring full Kubernetes privileges.  </li> <li>Keycloak resources protect access to Jane\u2019s datalab.  </li> </ul>"},{"location":"how-to-guides/usage_concepts/#example-john-with-git-based-workshop-files","title":"Example: John (with Git-based workshop files)","text":"<pre><code># John has a datalab s-john with a default session automatically created.\n# That session will run permanently until stopped by the operator.\n# No vcluster is provisioned. Workshop and data files are pulled from Git,\n# enabling the workshop tab in the Educates UI.\n# Credentials to storage are expected in a secret \"john\" in the same namespace.\n# A Keycloak group, role, and client are created; user \"john\" must exist in Keycloak.\napiVersion: pkg.internal/v1beta1\nkind: Datalab\nmetadata:\n  name: s-john\nspec:\n  users:\n  - john\n  secretName: john\n  sessions:\n  - default\n  vcluster: false\n  files:\n  - git:\n      url: https://github.com/versioneer-tech/datalab-example\n      ref: origin/main\n    includePaths:\n    - /workshop/**\n    - /data/**\n    - /README.md\n    path: .\n</code></pre> <ul> <li>Preloads workshop materials from Git.  </li> <li>Activates the workshop tab in the UI for guided exercises.  </li> <li>Keycloak ensures only John has access to this environment and tooling.  </li> </ul>"},{"location":"how-to-guides/usage_concepts/#verifying-provisioning","title":"Verifying Provisioning","text":"<p>Once a <code>Datalab</code> claim has been applied, you can verify that the provisioning worked.</p>"},{"location":"how-to-guides/usage_concepts/#check-composite-status","title":"Check Composite Status","text":"<p>List all <code>datalabs</code> in your namespace:</p> <pre><code>kubectl get datalabs -n workspace\n</code></pre> <p>You should see <code>READY=True</code> once reconciliation is complete:</p> <pre><code>NAME       SYNCED   READY   COMPOSITION       AGE\ns-joe      True     True    datalab-educates  2m\ns-jeff     True     True    datalab-educates  2m\ns-jane     True     True    datalab-educates  2m\ns-john     True     True    datalab-educates  2m\n</code></pre> <p>Inspect details:</p> <pre><code>kubectl describe datalab s-jeff -n workspace\n</code></pre> <p>Look for conditions like <code>Ready=True</code> and any event messages.</p>"},{"location":"how-to-guides/usage_concepts/#find-the-storage-secret","title":"Find the Storage Secret","text":"<p>Each Datalab references a Secret in the same namespace via <code>spec.secretName</code>. For example, the claim <code>s-jeff</code> with <code>secretName: jeff</code> requires a Secret named <code>jeff</code>.</p> <p>List Secrets:</p> <pre><code>kubectl get secrets -n workspace\n</code></pre> <p>Inspect:</p> <pre><code>kubectl describe secret jeff -n workspace\n</code></pre> <p>View raw YAML:</p> <pre><code>kubectl get secret jeff -n workspace -o yaml\n</code></pre> <p>Decode keys (AWS style):</p> <pre><code>kubectl get secret jeff -n workspace -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 -d; echo\nkubectl get secret jeff -n workspace -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 -d; echo\n</code></pre>"},{"location":"how-to-guides/usage_concepts/#summary","title":"Summary","text":"<ul> <li>A <code>Datalab</code> defines users, sessions, optional vcluster, optional workshop files, and integrates with Keycloak.  </li> <li>Users must already exist in Keycloak; the Datalab provisions groups, memberships, a client, and a role to secure access.  </li> <li>Sessions may be long-lived (auto-created) or on-demand (user started).  </li> <li>Each Datalab requires a storage credentials Secret in the same namespace.  </li> <li>Workshop files enable the Educates UI workshop tab.  </li> <li>Check <code>kubectl get datalabs</code> for readiness, ensure Secrets are present, and confirm Keycloak groups/roles are created.  </li> </ul>"},{"location":"reference-guides/api/","title":"API Reference","text":"<p>Packages:</p> <ul> <li>pkg.internal/v1beta1</li> </ul>"},{"location":"reference-guides/api/#pkginternalv1beta1","title":"pkg.internal/v1beta1","text":"<p>Resource Types:</p> <ul> <li>Datalab</li> </ul>"},{"location":"reference-guides/api/#datalab","title":"Datalab","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>A Datalab is a tenant-facing, namespaced composite resource. It defines ownership, membership, and optional file bundles to materialize in the environment.</p> Name Type Description Required apiVersion string pkg.internal/v1beta1 true kind string Datalab true metadata object Refer to the Kubernetes API documentation for the fields of the `metadata` field. true spec object            Desired configuration of the datalab. true status object            Current observed state of the datalab. false"},{"location":"reference-guides/api/#datalabspec","title":"Datalab.spec","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Desired configuration of the datalab.</p> Name Type Description Required users []string            Users associated with this datalab. Default: [] true files []object            File bundles to fetch from remote sources and copy into the environment. Supports image, git, and http sources, path filtering, and optional credentials. Default: [] false secretName string            Name of the Secret containing the credentials to access the storage associated with this Datalab. The Secret must exist in the same namespace as the Datalab. false sessions []string            Sessions to be started for this datalab. Default: [] false vcluster boolean            Whether to provision an isolated vcluster for each datalab session. Default: false false"},{"location":"reference-guides/api/#datalabspecfilesindex","title":"Datalab.spec.files[index]","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required excludePaths []string            Glob patterns to exclude from the source. false git object            Git repository source configuration. false http object            HTTP source configuration for downloading an asset or archive. false image object            Container image source configuration. false includePaths []string            Glob patterns to include from the source. false newRootPath string            Subdirectory within the source to treat as the root. false path string            Destination directory for extracted files. Default: . false"},{"location":"reference-guides/api/#datalabspecfilesindexgit","title":"Datalab.spec.files[index].git","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Git repository source configuration.</p> Name Type Description Required lfsSkipSmudge boolean            If true, do not fetch Git LFS objects. false ref string            Branch, tag, or commit to fetch (e.g., origin/main). false refSelection object            Resolve an explicit ref by semver selection. false secretRef object            Optional credentials for the Git server. false url string            Git repository URL (HTTPS or SSH). false verification object            GPG signature verification options. false"},{"location":"reference-guides/api/#datalabspecfilesindexgitrefselection","title":"Datalab.spec.files[index].git.refSelection","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Resolve an explicit ref by semver selection.</p> Name Type Description Required semver object false"},{"location":"reference-guides/api/#datalabspecfilesindexgitrefselectionsemver","title":"Datalab.spec.files[index].git.refSelection.semver","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required constraints string false prereleases object false"},{"location":"reference-guides/api/#datalabspecfilesindexgitrefselectionsemverprereleases","title":"Datalab.spec.files[index].git.refSelection.semver.prereleases","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required identifiers []string false"},{"location":"reference-guides/api/#datalabspecfilesindexgitsecretref","title":"Datalab.spec.files[index].git.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Optional credentials for the Git server.</p> Name Type Description Required name string            Name of a Secret with auth (ssh-privatekey/knownhosts or username/password). false namespace string            Namespace of the Secret. false"},{"location":"reference-guides/api/#datalabspecfilesindexgitverification","title":"Datalab.spec.files[index].git.verification","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>GPG signature verification options.</p> Name Type Description Required publicKeysSecretRef object false"},{"location":"reference-guides/api/#datalabspecfilesindexgitverificationpublickeyssecretref","title":"Datalab.spec.files[index].git.verification.publicKeysSecretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required name string            Secret containing GPG public keys. false namespace string            Namespace of the Secret. false"},{"location":"reference-guides/api/#datalabspecfilesindexhttp","title":"Datalab.spec.files[index].http","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>HTTP source configuration for downloading an asset or archive.</p> Name Type Description Required secretRef object            Optional basic-auth credentials for the HTTP server. false sha256 string            Optional checksum for verification of the downloaded asset. false url string            HTTP(S) URL to file or archive; archives are unpacked automatically. false"},{"location":"reference-guides/api/#datalabspecfilesindexhttpsecretref","title":"Datalab.spec.files[index].http.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Optional basic-auth credentials for the HTTP server.</p> Name Type Description Required name string            Secret containing username/password. false namespace string            Namespace of the Secret. false"},{"location":"reference-guides/api/#datalabspecfilesindeximage","title":"Datalab.spec.files[index].image","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Container image source configuration.</p> Name Type Description Required dangerousSkipTLSVerify boolean            Skip TLS verification when pulling from the registry. false secretRef object            Optional credentials for the image registry. false tagSelection object            Optional semantic-version tag selection policy. false url string            OCI image reference (e.g., ghcr.io/org/repo:tag or @sha256:...). false"},{"location":"reference-guides/api/#datalabspecfilesindeximagesecretref","title":"Datalab.spec.files[index].image.secretRef","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Optional credentials for the image registry.</p> Name Type Description Required name string            Name of a Secret containing registry credentials. false namespace string            Namespace of the Secret. false"},{"location":"reference-guides/api/#datalabspecfilesindeximagetagselection","title":"Datalab.spec.files[index].image.tagSelection","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Optional semantic-version tag selection policy.</p> Name Type Description Required semver object false"},{"location":"reference-guides/api/#datalabspecfilesindeximagetagselectionsemver","title":"Datalab.spec.files[index].image.tagSelection.semver","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required constraints string            Semver constraint string (e.g., \"&gt;1.2.0\"). false prereleases object false"},{"location":"reference-guides/api/#datalabspecfilesindeximagetagselectionsemverprereleases","title":"Datalab.spec.files[index].image.tagSelection.semver.prereleases","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> Name Type Description Required identifiers []string false"},{"location":"reference-guides/api/#datalabstatus","title":"Datalab.status","text":"<p><sup><sup>\u21a9 Parent</sup></sup></p> <p>Current observed state of the datalab.</p> Name Type Description Required"}]}