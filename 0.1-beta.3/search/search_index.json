{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cloud Data Labs, by Design","text":"<p>Datalab is a Crossplane\u2011powered abstraction that turns \u201cdata workspace\u201d provisioning into a clean, versioned API. It applies a platform\u2011engineering mindset: productize the golden path, hide the boilerplate, and let teams request a lab with a single spec\u2014while your platform composes identity, ingress, storage, and content bootstrapping under the hood.</p> <ul> <li>Stable API, many runtimes. The same <code>Datalab</code> spec can back different open\u2011source experiences such as Educates or Jupyter\u2014your platform decides, users don\u2019t have to.</li> <li>GitOps\u2011first. Everything is declarative and reviewable: labs, policies, and updates flow through your existing CI/CD.</li> <li>Batteries included. Built\u2011in file bundling (OCI image, Git, HTTP) seeds each lab with ready\u2011to\u2011run materials.</li> <li>Portable &amp; multi\u2011tenant. Any Kubernetes, any ingress class, namespaced isolation by default.</li> <li>Upgrade by bump. Ship improvements safely via package version bumps; rollback with revision history.</li> </ul>"},{"location":"#how-it-feels","title":"How it feels","text":"<pre><code>apiVersion: pkg.internal/v1beta1\nkind: Datalab\nmetadata:\n  name: demo\n  namespace: datalab\nspec:\n  users:\n  - alice\n  sessions:\n  - default\n  files:\n  - git:\n      url: https://github.com/demo/datalab-assets\n      ref: origin/main\n    includePaths: [\"/**\"]\n</code></pre> <p>Pair it with a small, cluster\u2011specific <code>EnvironmentConfig</code> (realm, ingress domain/class, storage secret) and the platform handles the rest\u2014provisioning the runtime you\u2019ve standardized on, mounting credentials, and preloading content.</p>"},{"location":"#sessions","title":"Sessions","text":"<p>A Datalab may declare one or more <code>spec.sessions</code>. Each string value corresponds to a WorkshopSession created at runtime. If no sessions are given, no runtime will be started. Sessions can be patched into the spec later if needed.</p>"},{"location":"#files-and-the-workshop-tab","title":"Files and the Workshop Tab","text":"<p>The <code>spec.files</code> array is optional. When empty or omitted, no workshop tab is rendered in the Educates UI. Providing at least one file source enables the workshop tab and mounts content into the environment.</p> <p>Supported sources: - OCI image (<code>spec.files[].image</code>) - Git repository (<code>spec.files[].git</code>) - HTTP(S) download (<code>spec.files[].http</code>)  </p> <p>Filters (<code>includePaths</code>, <code>excludePaths</code>, <code>newRootPath</code>, <code>path</code>) control what ends up visible.</p>"},{"location":"#vcluster-toggle","title":"vcluster toggle","text":"<p><code>spec.vcluster</code> is a boolean flag. - <code>true</code> \u2192 the datalab provisions a vcluster for runtime isolation. - <code>false</code> \u2192 workloads run directly in the namespace.</p>"},{"location":"#storage","title":"Storage","text":"<p>The <code>storage</code> section in the <code>EnvironmentConfig</code> references a Kubernetes Secret \u2014 named identically to the Datalab \u2014 which must already exist in the cluster. This Secret must reside in the namespace specified by <code>storage.secretNamespace</code> and include at least:</p> <ul> <li><code>AWS_ACCESS_KEY_ID</code></li> <li><code>AWS_SECRET_ACCESS_KEY</code></li> </ul> <p>The values must provide access to the endpoint and provider listed in <code>EnvironmentConfig.data.storage</code>. You may create this secret manually before applying the Datalab.</p>"},{"location":"#api-reference","title":"API Reference","text":"<p>For the full published XRD with all fields, see the API Reference Guide.</p>"},{"location":"how-to-guides/datalab-educates/","title":"An Educates based Datalab variant \u2014 How\u2011To Guide","text":"<p>This guide explains how to install the Datalab Crossplane package for the Educates runtime, provide cluster\u2011specific settings, and provision your first lab. The approach is platform\u2011engineering first: a single CRD abstracts identity, ingress, storage, and content bootstrapping while you choose the runtime stack.</p>"},{"location":"how-to-guides/datalab-educates/#1-prerequisites","title":"1) Prerequisites","text":"<ul> <li>Kubernetes cluster with <code>kubectl</code> access</li> <li>Crossplane v2.0.2 or newer, installed and healthy</li> <li>A GitOps mechanism (optional but recommended) to manage Providers/Functions</li> <li>DNS/TLS and an ingress controller in your cluster (any implementation)</li> </ul>"},{"location":"how-to-guides/datalab-educates/#2-install-the-datalab-configuration-package","title":"2) Install the Datalab configuration package","text":"<p>Install the configuration package. Providers and functions are managed separately:</p> <pre><code>apiVersion: pkg.crossplane.io/v1\nkind: Configuration\nmetadata:\n  name: datalab\nspec:\n  package: ghcr.io/versioneer-tech/provider-datalab/educates:latest\n  skipDependencyResolution: true\n</code></pre> <p>Apply:</p> <pre><code>kubectl apply -f configuration-install.yaml\nkubectl get configurationrevisions.pkg.crossplane.io\n</code></pre>"},{"location":"how-to-guides/datalab-educates/#3-runtime-dependencies","title":"3) Runtime dependencies","text":"<p>This Datalab targets the Educates runtime. See <code>educates/dependencies/README.md</code> for instructions to install Educates and the Crossplane v2 dependencies.</p>"},{"location":"how-to-guides/datalab-educates/#4-environment-configuration","title":"4) Environment configuration","text":"<p>Provide cluster\u2011specific settings through an <code>EnvironmentConfig</code>. The composition consumes this to render ingress, identity, and storage correctly:</p> <pre><code>apiVersion: apiextensions.crossplane.io/v1beta1\nkind: EnvironmentConfig\nmetadata:\n  name: datalab\ndata:\n  iam:\n    realm: demo\n  ingress:\n    class: nginx\n    domain: datalab.demo\n    secret: wildcard-tls\n  storage:\n    endpoint: https://s3.demo\n    provider: Other\n    region: demo\n    force_path_style: \"true\"\n    secretNamespace: datalab\n    type: s3\n</code></pre>"},{"location":"how-to-guides/datalab-educates/#5-storage-credentials","title":"5) Storage credentials","text":"<p>The <code>storage</code> section in the <code>EnvironmentConfig</code> references a Kubernetes Secret \u2014 named identically to the Datalab \u2014 which must already exist in the cluster. This Secret must reside in the namespace specified by <code>storage.secretNamespace</code> and include at least:</p> <ul> <li><code>AWS_ACCESS_KEY_ID</code></li> <li><code>AWS_SECRET_ACCESS_KEY</code></li> </ul> <p>The credentials must provide access to the endpoint/region defined in the environment config. You can create the secret manually, for example:</p> <pre><code>kubectl -n datalab create secret generic demo   --from-literal=AWS_ACCESS_KEY_ID=&lt;KEY_ID&gt;   --from-literal=AWS_SECRET_ACCESS_KEY=&lt;SECRET&gt;\n</code></pre>"},{"location":"how-to-guides/datalab-educates/#6-create-a-datalab","title":"6) Create a Datalab","text":"<p>The minimal example creates a user\u2011scoped lab with one session. Sessions are required to start a runtime; if omitted, no runtime is started by default (you may patch sessions later). If <code>spec.files</code> is empty or omitted, no workshop tab is rendered in the Educates UI.</p> <pre><code>apiVersion: pkg.internal/v1beta1\nkind: Datalab\nmetadata:\n  name: demo\n  namespace: datalab\nspec:\n  users:\n  - alice\n  sessions:\n  - default\n  vcluster: true\n  files: []\n</code></pre> <p>For more scenarios, see <code>examples/labs.yaml</code>, which demonstrates: - labs with multiple users - enabling/disabling <code>spec.vcluster</code> - attaching workshop files from Git, OCI images, or HTTP sources</p>"},{"location":"how-to-guides/datalab-educates/#7-validate-installation","title":"7) Validate installation","text":"<p>Check that packages, providers, CRDs, and your XRD are healthy:</p> <pre><code># Package and revisions\nkubectl get configurations.pkg.crossplane.io\nkubectl get configurationrevisions.pkg.crossplane.io\n\n# Providers\nkubectl get providers.pkg.crossplane.io\nkubectl get providerrevisions.pkg.crossplane.io\n\n# API groups\nkubectl api-resources --api-group=kubernetes.crossplane.io\nkubectl api-resources --api-group=helm.crossplane.io\nkubectl api-resources --api-group=keycloak.crossplane.io\n\n# Managed Resource Definitions\nkubectl get managedresourcedefinitions | grep -E 'helm|kubernetes|keycloak'\n\n# Your XRD and instances\nkubectl get xrd\nkubectl get datalabs.pkg.internal\n</code></pre>"},{"location":"how-to-guides/datalab-educates/#8-architecture-at-a-glance","title":"8) Architecture (at a glance)","text":"<pre><code>flowchart TD\n  A[Datalab (XR)\\napi: pkg.internal/v1beta1] --&gt;|spec + metadata| B[Composition (Crossplane v2\\nFunction Pipeline)]\n  C[EnvironmentConfig\\nname: datalab] --&gt;|context\\nprepare-environment| B\n  D[K8s Secret\\nname: &lt;datalab-name&gt;\\nns: storage.secretNamespace] --&gt;|credentials| B\n\n  subgraph Runtime Resources\n    E[Workshop]\n    F[WorkshopEnvironment]\n    G[WorkshopSession(s)\\nfrom spec.sessions[]]\n    H[(Optional) vcluster\\nfrom spec.vcluster]\n  end\n\n  B --&gt; E\n  B --&gt; F\n  B --&gt; G\n  B --&gt; H\n\n  I[Files (Git/OCI/HTTP)\\nfrom spec.files[]] --&gt;|enable workshop tab| E\n\n  style H stroke-dasharray: 5 5\n  style I stroke-dasharray: 5 5\n</code></pre> <p>Key: - Sessions present \u2192 runtime is started; none \u2192 no runtime until patched - Files present \u2192 workshop tab enabled; none \u2192 no workshop tab - <code>spec.vcluster: true</code> \u2192 vcluster provisioned; <code>false</code> \u2192 namespace\u2011scoped runtime</p>"},{"location":"how-to-guides/datalab-jupyter/","title":"How-to guides: workspace-educates","text":"<p>Coming soon!</p>"},{"location":"reference-guides/api/","title":"API Reference","text":"<p>Packages:</p>"}]}