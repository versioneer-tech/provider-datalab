# Copyright 2025, EOX (https://eox.at) and Versioneer (https://versioneer.at)
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v2
kind: CompositeResourceDefinition
metadata:
  name: datalabs.pkg.internal
spec:
  group: pkg.internal
  names:
    kind: Datalab
    plural: datalabs
  scope: Namespaced
  versions:
    - name: v1beta1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          description: A Datalab is a tenant-facing, namespaced composite resource. It defines ownership, membership, and optional file bundles to materialize in the environment.
          required:
            - spec
          properties:
            spec:
              type: object
              description: Desired configuration of the datalab.
              required:
                - users
              properties:
                secretName:
                  type: string
                  description: >-
                    Name of the Secret containing the credentials to access the
                    storage associated with this Datalab. The Secret must exist
                    in the same namespace as the Datalab.
                users:
                  type: array
                  description: Users associated with this datalab.
                  items:
                    type: string
                  default: []
                sessions:
                  type: array
                  description: Sessions to be started for this datalab.
                  items:
                    type: string
                  default: []
                vcluster:
                  type: boolean
                  description: Whether to provision an isolated vcluster for each datalab session.
                  default: false
                quota:
                  type: object
                  description: >-
                    Optional per-datalab session quota overrides. If a field is
                    not specified here, the composition falls back to
                    EnvironmentConfig at `spec.defaults.quota`, and then to hard
                    defaults. Effective defaults (when neither XR nor
                    EnvironmentConfig provides a value): memory=2Gi,
                    storage=1Gi, budget=medium.
                  properties:
                    memory:
                      type: string
                      description: >-
                        Memory request for the session environment as a
                        Kubernetes quantity (e.g., "2Gi", "512Mi"). Effective
                        default (if not set here or in EnvironmentConfig):
                        "2Gi".
                    storage:
                      type: string
                      description: >-
                        Storage size for the session as a Kubernetes quantity
                        (e.g., "1Gi"). Effective default (if not set here or in
                        EnvironmentConfig): "1Gi".
                    budget:
                      type: string
                      description: >-
                        Namespace budget class determining available compute resources.
                        Accepted values correspond to standard Educates resource budgets.
                        Effective default (if not set here or in EnvironmentConfig): "medium".
                      enum: ["small", "medium", "large", "x-large", "xx-large", "xxx-large"]
                security:
                  type: object
                  description: >-
                    Optional per-datalab session security settings. If a field
                    is not specified here, the composition falls back to
                    EnvironmentConfig at `spec.defaults.security`, and then to
                    hard defaults. Effective defaults (when neither XR nor
                    EnvironmentConfig provides a value): policy=baseline,
                    kubernetesAccess=true, kubernetesRole=edit. When policy is
                    "privileged", Docker is automatically enabled with 20Gi
                    storage.
                  properties:
                    policy:
                      type: string
                      description: >-
                        Pod Security Standard policy level. Accepted values:
                        "restricted", "baseline", "privileged". Effective
                        default (if not set here or in EnvironmentConfig):
                        "baseline".
                      enum: ["restricted", "baseline", "privileged"]
                    kubernetesAccess:
                      type: boolean
                      description: >-
                        Whether a Kubernetes service account token should be
                        made available within the session. Effective default (if
                        not set here or in EnvironmentConfig): true.
                    kubernetesRole:
                      type: string
                      description: >-
                        Session namespace RBAC role. Accepted values:
                        "admin", "edit", "view". Effective default (if not set
                        here or in EnvironmentConfig): "edit".
                      enum: ["admin", "edit", "view"]
                files:
                  type: array
                  description: File bundles to fetch from remote sources and copy into the environment. Supports image, git, and http sources, path filtering, and optional credentials.
                  items:
                    type: object
                    properties:
                      path:
                        type: string
                        description: Destination directory for extracted files.
                        default: "."
                      includePaths:
                        type: array
                        description: Glob patterns to include from the source.
                        items:
                          type: string
                      excludePaths:
                        type: array
                        description: Glob patterns to exclude from the source.
                        items:
                          type: string
                      newRootPath:
                        type: string
                        description: Subdirectory within the source to treat as the root.
                      image:
                        type: object
                        description: Container image source configuration.
                        properties:
                          url:
                            type: string
                            description: OCI image reference (e.g., ghcr.io/org/repo:tag or @sha256:...).
                          secretRef:
                            type: object
                            description: Optional credentials for the image registry.
                            properties:
                              name:
                                type: string
                                description: Name of a Secret containing registry credentials.
                              namespace:
                                type: string
                                description: Namespace of the Secret.
                          dangerousSkipTLSVerify:
                            type: boolean
                            description: Skip TLS verification when pulling from the registry.
                          tagSelection:
                            type: object
                            description: Optional semantic-version tag selection policy.
                            properties:
                              semver:
                                type: object
                                properties:
                                  constraints:
                                    type: string
                                    description: Semver constraint string.
                                  prereleases:
                                    type: object
                                    properties:
                                      identifiers:
                                        type: array
                                        items:
                                          type: string
                      git:
                        type: object
                        description: Git repository source configuration.
                        properties:
                          url:
                            type: string
                            description: Git repository URL (HTTPS or SSH).
                          ref:
                            type: string
                            description: Branch, tag, or commit to fetch.
                          refSelection:
                            type: object
                            description: Resolve an explicit ref by semver selection.
                            properties:
                              semver:
                                type: object
                                properties:
                                  constraints:
                                    type: string
                                  prereleases:
                                    type: object
                                    properties:
                                      identifiers:
                                        type: array
                                        items:
                                          type: string
                          lfsSkipSmudge:
                            type: boolean
                            description: If true, do not fetch Git LFS objects.
                          verification:
                            type: object
                            description: GPG signature verification options.
                            properties:
                              publicKeysSecretRef:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: Secret containing GPG public keys.
                                  namespace:
                                    type: string
                                    description: Namespace of the Secret.
                          secretRef:
                            type: object
                            description: Optional credentials for the Git server.
                            properties:
                              name:
                                type: string
                                description: Name of a Secret with auth (ssh-privatekey/knownhosts or username/password).
                              namespace:
                                type: string
                                description: Namespace of the Secret.
                      http:
                        type: object
                        description: HTTP source configuration for downloading an asset or archive.
                        properties:
                          url:
                            type: string
                            description: HTTP(S) URL to file or archive; archives are unpacked automatically.
                          sha256:
                            type: string
                            description: Optional checksum for verification of the downloaded asset.
                          secretRef:
                            type: object
                            description: Optional basic-auth credentials for the HTTP server.
                            properties:
                              name:
                                type: string
                                description: Secret containing username/password.
                              namespace:
                                type: string
                                description: Namespace of the Secret.
                    oneOf:
                      - required: [image]
                        properties:
                          image:
                            required: [url]
                      - required: [git]
                        properties:
                          git:
                            required: [url, ref]
                      - required: [http]
                        properties:
                          http:
                            required: [url]
                  default: []
            status:
              type: object
              description: Current observed state of the datalab.
              properties:
                sessions:
                  type: object
                  description: Map of session IDs and their current state.
                  additionalProperties:
                    type: object
                    description: Observed state of a single datalab session.
                    properties:
                      url:
                        type: string
                        description: Public URL of the active session.
